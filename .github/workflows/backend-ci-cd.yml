name: backend-ci-cd
on:
  push: { branches: [ develop, main ] }

permissions:
  contents: read
  packages: write   # GHCR 푸시 권한

env:
  IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/tiggle-api

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '17' }
      - name: Build jar
        run: ./gradlew clean bootJar -x test
      - name: Login GHCR
        run: echo "${{ github.token }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Docker build & push
        run: |
          docker build -t $IMAGE_REPO:${{ github.sha }} .
          docker push $IMAGE_REPO:${{ github.sha }}

  deploy:
    needs: build
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_SSH_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            sudo mkdir -p /srv/tiggle && cd /srv/tiggle
            cat > .env << 'EOF'
DB_URL=${{ secrets.DB_URL }}
DB_USERNAME=${{ secrets.DB_USERNAME }}
DB_PASSWORD=${{ secrets.DB_PASSWORD }}
APP_PORT=8081
EOF
            IMAGE="ghcr.io/${{ github.repository_owner }}/tiggle-api:${{ github.sha }}"
            cat > docker-compose.yml << EOF
services:
  api:
    image: $IMAGE
    env_file: .env
    environment: [ "SPRING_PROFILES_ACTIVE=prod" ]
    ports: [ "8081:8081" ]
    restart: unless-stopped
EOF
            sudo docker pull $IMAGE
            sudo docker compose up -d
