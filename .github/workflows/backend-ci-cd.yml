name: backend-ci-cd

on:
  push:
    branches: [ develop, main ]

env:
  IMAGE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/tiggle-api

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build jar
        run: ./gradlew clean bootJar -x test
      - name: Docker build & push
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker build -t $IMAGE_REPO:${{ github.sha }} .
          docker push $IMAGE_REPO:${{ github.sha }}

  deploy:
    # develop, main 에서만 배포
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_SSH_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            sudo mkdir -p /srv/tiggle && cd /srv/tiggle

            cat > .env << 'EOF'
DB_URL=${{ secrets.DB_URL }}
DB_USERNAME=${{ secrets.DB_USERNAME }}
DB_PASSWORD=${{ secrets.DB_PASSWORD }}
OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
RUNWAY_API_KEY=${{ secrets.RUNWAY_API_KEY }}
VREW_API_KEY=${{ secrets.VREW_API_KEY }}
APP_PORT=8081
EOF

            IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/tiggle-api:${{ github.sha }}"

            cat > docker-compose.yml << EOF
services:
  api:
    image: $IMAGE
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8081:8081"
    restart: unless-stopped
EOF

            echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            sudo docker pull $IMAGE
            sudo docker compose up -d
